services:
  chat:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: rebelist-revelations-chat
    restart: no
    env_file:
      - .env
    networks:
      - revelations
    volumes:
      - ./docker/chat/models:/home/revelations/models


  mongo:
    image: mongodb/mongodb-community-server:8.0.9-ubi8
    container_name: rebelist-revelations-mongo
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=admin
      - MONGODB_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s
    profiles: [ ]
    networks:
      - revelations
    volumes:
      - mongo_data:/data/db
      - ./docker/mongo/mongod.conf:/etc/mongod.conf:ro
      - ./docker/mongo/mongosh.conf:/etc/mongosh.conf:ro

  qdrant:
    image: qdrant/qdrant:v1.14.1
    restart: always
    container_name: rebelist-revelations-qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    networks:
      - revelations
    volumes:
      - qdrant_data:/qdrant/storage
      - ./docker/qdrant/production.yaml:/qdrant/config/production.yaml:ro

  ollama:
    image: ollama/ollama:0.9.0
    container_name: rebelist-revelations-ollama
    ports:
      - "11434:11434"
    restart: unless-stopped
    environment:
      OLLAMA_MODELS: /root/.ollama
    env_file:
      - .env
    networks:
      - revelations
    volumes:
      - ollama_data:/root/.ollama

volumes:
  mongo_data:
  qdrant_data:
  ollama_data:

networks:
  revelations:
    driver: bridge